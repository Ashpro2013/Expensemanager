@if (ShowConfirmation)
{
<div class="modal fade show d-block" id="exampleModel"  tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Unipospro</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                        @onclick="()=> OnConfirmationChange(false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@Dialog</p>
            </div>
            <div class="modal-footer">
                    @if (@ButtonText == "Delete")
                    {
                        <button type="button" class="btn btn-secondary"  @onclick="()=> OnConfirmationChange(false)">Cancel</button>
                    }
                <button type="button" class="btn btn-danger" data-dismiss="modal"  @onclick="()=> OnConfirmationChange(true)">@ButtonText</button>
            </div>
        </div>
    </div>
</div>
}
@code {
    protected bool ShowConfirmation { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Ok";
    [Parameter]
    public string Dialog { get; set; } = "Are you sure to delete the item?";
    [Parameter]
    public EventCallback<bool>  ConfirmationChanged { get; set; }
    public void Show()
    {
        ShowConfirmation = true;
        this.StateHasChanged();
    }
    protected async Task OnConfirmationChange(bool Value)
    {
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(Value);
        }
}
